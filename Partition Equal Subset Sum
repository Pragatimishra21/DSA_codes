class Solution{
public:
   int solve(int n , int arr[] , int k)
   {
       vector<vector<int>> dp(n, vector<int>(k+1 , 0));
       for(int i=0 ; i<n ; i++)
       dp[i][0] = 1;
       
       if(arr[0]<=k)
       dp[0][arr[0]] = 1;
       
       for(int i=1 ; i<n ; i++)
       {
           for(int j=1 ; j<=k ; j++)
           {
               int notake = dp[i-1][j];
               int take = 0;
               if(j>=arr[i]) take = dp[i-1][j-arr[i]];
               
               dp[i][j] = take|notake;
           }
       }
       
       return dp[n-1][k];
   }

    int equalPartition(int N, int arr[])
    {
    int totsum = 0;
    for(int i=0 ; i<N ; i++)
    totsum += arr[i];
    
    if(totsum%2 != 0) return 0;
    
    else 
    return solve(N , arr , totsum/2);
    }
};
