
long long int m=1e9+7;
 long long int dp[100001];
class Solution {
  public:
  long long int solve(int n) {
      if(n==0||n==1)
      return n;
      
      if(dp[n]!=-1)
      return dp[n]%m;
      
      int choice1 = solve(n-1);
      int choice2 = solve(n-2);
      
      return dp[n] = (choice1 + choice2)%m; 
      
  }
    long long int topDown(int n) {
        // code here
       memset(dp,-1,sizeof(dp));
       return solve(n);
    }
    long long int bottomUp(int n) {
        // code here
        long long int DP[n+1];
        if(n==0 || n==1)
        return n;
        DP[0] = 0;
        DP[1] = 1;
        for(int i = 2; i<=n; i++) {
            DP[i] = (DP[i-1] + DP[i-2])%m;
        }
        
        return DP[n]%m;
    }
};

