class Solution{
public:
    int knapSack(int n, int W, int val[], int wt[])
    {
       vector<vector<int>> dp(n, vector<int>(W+1 , 0));
       for(int i=wt[0] ; i<=W ; i++)
       {
           dp[0][i] = (int)(i/wt[0])*val[0];
       }
       for(int i=1 ; i<n ; i++)
       {
           for(int j=0 ; j<=W ; j++)
           {
               int notpick = dp[i-1][j];
               int pick = INT_MIN;
               if(wt[i]<=j) pick =val[i]+dp[i][j-wt[i]];
               
               dp[i][j] = max(notpick , pick);
           }
       }
       return dp[n-1][W];
    }
};
