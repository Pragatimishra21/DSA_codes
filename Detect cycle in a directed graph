class Solution {
  public:
    bool dfs(int i, vector<int> adj[] , int vis[] , int dfsvis[])
    {
      vis[i] = 1;
      dfsvis[i] = 1;
      for(auto it: adj[i])
      {
          if(!vis[it])
          {
              if(dfs(it , adj , vis , dfsvis) == true) return true;
          }
          else
          {
              if(dfsvis[it] == 1) return true;
          }
      }
      dfsvis[i] = 0;
      return false;
    }
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        int vis[V] = {0};
        int dfsvis[V] = {0};
        for(int i=0 ; i<V ; i++)
        {
         if(!vis[i])
         if(dfs(i,adj,vis,dfsvis) == true) return true;
        }
        return false;
    }
};
